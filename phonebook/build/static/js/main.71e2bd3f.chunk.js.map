{"version":3,"sources":["filter.js","personform.js","person.js","persons.js","services/persons.js","notification.js","error.js","app.js","index.js"],"names":["Filter","filter","handleFilterChange","onChange","value","PersonForm","name","number","handleSave","handleNameChange","handleNumberChange","onSubmit","Person","person","deletePerson","onClick","event","Persons","filteredPersons","map","id","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","Error","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","notification","setNotification","error","setError","useEffect","console","log","personService","returnedPersons","length","p","toLowerCase","includes","target","preventDefault","exists","find","window","confirm","updated","setTimeout","catch","alert","returnedPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"6KAUeA,EARA,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,mBAErB,OAAQ,oDAEJ,uBAAOC,SAAUD,EAAoBE,MAAOH,QCarCI,EAjBI,SAAC,GAAsE,IAArEC,EAAoE,EAApEA,KAAMC,EAA8D,EAA9DA,OAAQC,EAAsD,EAAtDA,WAAYC,EAA0C,EAA1CA,iBAAkBC,EAAwB,EAAxBA,mBAE7D,OACI,uBAAMC,SAAUH,EAAhB,UACA,yCACQ,uBAAOL,SAAUM,EAAkBL,MAAOE,OAElD,2CACU,uBAAOH,SAAUO,EAAoBN,MAAOG,OAEtD,8BACE,+CCGKK,EAdA,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,aAMrB,OACQ,gCACuBD,EAAOP,KAD9B,IACqCO,EAAON,OAD5C,IACoD,wBAAQQ,QAN/C,SAACC,GAClBF,EAAaD,IAK2C,sBAA3CA,EAAOP,OCGbW,EAVC,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,gBAAiBJ,EAAkB,EAAlBA,aAE/B,OACG,8BAAMI,EAAgBC,KAAI,SAAAN,GACrB,OAAO,cAAC,EAAD,CAAwBA,OAAQA,EAAQC,aAAcA,GAAzCD,EAAOO,U,gBCNjCC,EAAU,eAsBD,EApBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB5B,EAfA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAACN,EAAIO,GAElB,OADgBL,IAAMO,IAAN,UAAaR,EAAb,YAAwBD,GAAMO,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALM,SAACN,GAEpB,OADgBE,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BD,IAC5BI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCP5BK,EAXM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAEnB,OAAgB,OAAZA,GAAgC,KAAZA,EACb,KAIP,qBAAKC,UAAU,eAAf,SAA+BD,KCIxBE,EAXD,SAAC,GAAe,IAAdF,EAAa,EAAbA,QAEZ,OAAgB,OAAZA,GAAgC,KAAZA,EACb,KAIP,qBAAKC,UAAU,QAAf,SAAwBD,KC0HjBG,EA3HH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTC,EADS,KACAC,EADA,OAEgBF,mBAAS,IAFzB,mBAERG,EAFQ,KAECC,EAFD,OAGoBJ,mBAAS,IAH7B,mBAGRK,EAHQ,KAGGC,EAHH,OAIcN,mBAAS,IAJvB,mBAIRnC,EAJQ,KAIA0C,EAJA,OAKyBP,mBAAS,IALlC,mBAKRQ,EALQ,KAKMC,EALN,OAMWT,mBAAS,IANpB,mBAMRU,EANQ,KAMDC,EANC,KAiBhBC,qBATa,WACXC,QAAQC,IAAI,UACZC,IACG3B,MAAK,SAAA4B,GACJH,QAAQC,IAAI,qBACZZ,EAAWc,QAID,IAEhB,IAwFMlC,EAAkBjB,EAAOoD,OAAS,EAAIhB,EAAQpC,QAAO,SAAAqD,GAAC,OAAIA,EAAEhD,KAAKiD,cAAcC,SAASvD,EAAOsD,kBAAkBlB,EAEvH,OACE,gCACE,2CACA,cAAC,EAAD,CAAcL,QAASY,IACvB,cAAC,EAAD,CAAOZ,QAASc,IAChB,cAAC,EAAD,CAAQ5C,mBAXe,SAACc,GAC1B2B,EAAU3B,EAAMyC,OAAOrD,QAU2BH,OAAQA,IACxD,2CACA,cAAC,EAAD,CAAYK,KAAMiC,EAAShC,OAAQkC,EAAWhC,iBArBzB,SAACO,GACxBwB,EAAWxB,EAAMyC,OAAOrD,QAoB4DM,mBAjB3D,SAACM,GAC1B0B,EAAa1B,EAAMyC,OAAOrD,QAgBkGI,WAjG3G,SAACQ,GAClBA,EAAM0C,iBAEN,IAAMC,EAAStB,EAAQuB,MAAK,SAAAN,GAAC,OAAIA,EAAEhD,OAASiC,KAExCoB,GAAUA,EAAOpD,SAAWkC,EAC1BoB,OAAOC,QAAP,UAAkBvB,EAAlB,6EACFoB,EAAOpD,OAASkC,EAEhBU,EAAqBQ,EAAOvC,GAAIuC,GAC/BnC,MAAK,SAACuC,GACLlB,EAAgB,WAAD,OACJkB,EAAQzD,KADJ,uBAGf0D,YAAW,WACTnB,EAAgB,QACf,KACHM,IACC3B,MAAK,SAAA4B,GACJH,QAAQC,IAAI,qBACZZ,EAAWc,GACXZ,EAAW,IACXE,EAAa,UAGfuB,OAAM,SAAAnB,GACLC,EAAS,kBAAD,OACSY,EAAOrD,KADhB,kDASXqD,EACFO,MAAM,GAAD,OAAI3B,EAAJ,mCAWPY,EANe,CACb/B,GAAImB,EACJjC,KAAMiC,EACNhC,OAAQkC,IAITjB,MAAK,SAAA2C,GACJtB,EAAgB,UAAD,OACDsB,EAAe7D,KADd,oBAEX0D,YAAW,WACTnB,EAAgB,QACf,KACPI,QAAQC,IAAIiB,GACZ7B,EAAWD,EAAQ+B,OAAOD,IAC1B3B,EAAW,IACXE,EAAa,UAyCb,yCACA,cAAC,EAAD,CAASxB,gBAAiBA,EAAiBJ,aAtC1B,SAACD,GAEhBgD,OAAOC,QAAP,gCAAwCjD,EAAOP,KAA/C,QACF2C,QAAQC,IAAI,yBAA0BrC,EAAOP,MAC7C6C,EAA2BtC,EAAOO,IACjCI,MAAK,kBACN2B,IACC3B,MAAK,SAAA4B,GACJH,QAAQC,IAAI,qBACZZ,EAAWc,iB,MC5FnBiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.71e2bd3f.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({filter, handleFilterChange}) => {\n\n    return (<div>\n        filter shown with\n        <input onChange={handleFilterChange} value={filter} /> \n      </div>)\n}\n\nexport default Filter;","import React from 'react'\n\nconst PersonForm = ({name, number, handleSave, handleNameChange, handleNumberChange}) => {\n    \n    return (\n        <form onSubmit={handleSave}>\n        <div>\n          name: <input onChange={handleNameChange} value={name}/>\n        </div>\n        <div>\n          number: <input onChange={handleNumberChange} value={number}/>\n        </div>\n        <div>\n          <button>add</button>\n        </div>\n      </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Person = ({person, deletePerson}) => {\n\n    const handleDelete = (event) => {\n        deletePerson(person)\n    }\n\n    return (\n            <div \n                key={person.name}>{person.name} {person.number} <button onClick={handleDelete}>Delete</button>\n            </div>\n    )\n    \n}\n\nexport default Person","import React from 'react'\nimport Person from './person'\n\nconst Persons = ({filteredPersons, deletePerson}) => {\n\n    return (\n       <div>{filteredPersons.map(person => {\n            return <Person key={person.id} person={person} deletePerson={deletePerson}/>\n            }\n        )}</div> \n    )\n}\n\nexport default Persons","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { \n  getAll,\n  create,\n  update,\n  deletePerson\n}","import React from 'react'\n\nconst Notification = ({message}) => {\n\n    if (message === null || message === '') {\n        return null\n    }\n\n    return (\n        <div className=\"notification\">{message}</div>\n    )\n}\n\nexport default Notification","import React from 'react'\n\nconst Error = ({message}) => {\n\n    if (message === null || message === '') {\n        return null\n    }\n\n    return (\n        <div className=\"error\">{message}</div>\n    )\n}\n\nexport default Error","import React, { useState, useEffect } from 'react'\nimport Filter from './filter'\nimport PersonForm from './personform'\nimport Persons from './persons'\nimport personService from './services/persons'\nimport Notification from './notification'\nimport Error from './error'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ notification, setNotification] = useState('')\n  const [ error, setError] = useState('')\n\n  const hook = () => {\n    console.log('effect')\n    personService.getAll()\n      .then(returnedPersons => {\n        console.log('promise fulfilled')\n        setPersons(returnedPersons)\n      })\n  }\n\n  useEffect(hook, [])\n\n  const handleSave = (event) => {\n    event.preventDefault()\n\n    const exists = persons.find(p => p.name === newName)\n\n    if (exists && exists.number !== newNumber) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        exists.number = newNumber\n\n        personService.update(exists.id, exists)\n        .then((updated) => {\n          setNotification(\n          `Person '${updated.name}' has a new number`\n          )\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n          personService.getAll()\n          .then(returnedPersons => {\n            console.log('promise fulfilled')\n            setPersons(returnedPersons)\n            setNewName('')\n            setNewNumber('')\n            })\n        })\n         .catch(error => {\n           setError(\n          `Information of ${exists.name} has already been removed from the server`\n          )\n        })\n      }\n\n      return\n    }\n\n    if (exists) {\n      alert(`${newName} is already added to phonebook`) \n\n      return\n    }\n\n    const person = {\n      id: newName,\n      name: newName,\n      number: newNumber\n    }\n\n    personService.create(person)\n    .then(returnedPerson => {\n      setNotification(\n          `Added '${returnedPerson.name}' to phone book`)\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n      console.log(returnedPerson)\n      setPersons(persons.concat(returnedPerson))\n      setNewName('')\n      setNewNumber('')\n    })\n  }\n\n  const deletePerson = (person) => {\n    \n    if (window.confirm(`Do you want to delete ${person.name}?`)) {\n      console.log(\"Going to delete person\", person.name)\n      personService.deletePerson(person.id)\n      .then(() => \n      personService.getAll()\n      .then(returnedPersons => {\n        console.log('promise fulfilled')\n        setPersons(returnedPersons)\n      })\n      )\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const filteredPersons = filter.length > 0 ? persons.filter(p => p.name.toLowerCase().includes(filter.toLowerCase())) : persons\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <Error message={error} />\n      <Filter handleFilterChange={handleFilterChange} filter={filter} />\n      <h2>add a new</h2>\n      <PersonForm name={newName} number={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} handleSave={handleSave} />\n      <h2>Numbers</h2>\n      <Persons filteredPersons={filteredPersons} deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}